// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView CycloneCard;

  @NonNull
  public final CardView FloodCard;

  @NonNull
  public final CardView LandslideCard;

  @NonNull
  public final TextView Settings;

  @NonNull
  public final CardView changeLocationCardView;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final TextView currentDateTime;

  @NonNull
  public final TextView currentLocation;

  @NonNull
  public final TextView cycloneLabel;

  @NonNull
  public final TextView cycloneRiskLevel;

  @NonNull
  public final TextView cycloneRiskLevelPercentage;

  @NonNull
  public final TextView floodLabel;

  @NonNull
  public final TextView floodRiskLevel;

  @NonNull
  public final TextView floodRiskLevelPercentage;

  @NonNull
  public final TextView greetingsOfTheDay;

  @NonNull
  public final TextView home;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final TextView landslideRiskLabel;

  @NonNull
  public final TextView landslideRiskLevelPercentage;

  @NonNull
  public final TextView lanslideLabel;

  @NonNull
  public final TextView mapButton;

  @NonNull
  public final TextView textView6;

  private ActivityUserBinding(@NonNull ConstraintLayout rootView, @NonNull CardView CycloneCard,
      @NonNull CardView FloodCard, @NonNull CardView LandslideCard, @NonNull TextView Settings,
      @NonNull CardView changeLocationCardView, @NonNull ConstraintLayout constraintLayout2,
      @NonNull ConstraintLayout constraintLayout3, @NonNull TextView currentDateTime,
      @NonNull TextView currentLocation, @NonNull TextView cycloneLabel,
      @NonNull TextView cycloneRiskLevel, @NonNull TextView cycloneRiskLevelPercentage,
      @NonNull TextView floodLabel, @NonNull TextView floodRiskLevel,
      @NonNull TextView floodRiskLevelPercentage, @NonNull TextView greetingsOfTheDay,
      @NonNull TextView home, @NonNull ImageView imageView3, @NonNull TextView landslideRiskLabel,
      @NonNull TextView landslideRiskLevelPercentage, @NonNull TextView lanslideLabel,
      @NonNull TextView mapButton, @NonNull TextView textView6) {
    this.rootView = rootView;
    this.CycloneCard = CycloneCard;
    this.FloodCard = FloodCard;
    this.LandslideCard = LandslideCard;
    this.Settings = Settings;
    this.changeLocationCardView = changeLocationCardView;
    this.constraintLayout2 = constraintLayout2;
    this.constraintLayout3 = constraintLayout3;
    this.currentDateTime = currentDateTime;
    this.currentLocation = currentLocation;
    this.cycloneLabel = cycloneLabel;
    this.cycloneRiskLevel = cycloneRiskLevel;
    this.cycloneRiskLevelPercentage = cycloneRiskLevelPercentage;
    this.floodLabel = floodLabel;
    this.floodRiskLevel = floodRiskLevel;
    this.floodRiskLevelPercentage = floodRiskLevelPercentage;
    this.greetingsOfTheDay = greetingsOfTheDay;
    this.home = home;
    this.imageView3 = imageView3;
    this.landslideRiskLabel = landslideRiskLabel;
    this.landslideRiskLevelPercentage = landslideRiskLevelPercentage;
    this.lanslideLabel = lanslideLabel;
    this.mapButton = mapButton;
    this.textView6 = textView6;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CycloneCard;
      CardView CycloneCard = ViewBindings.findChildViewById(rootView, id);
      if (CycloneCard == null) {
        break missingId;
      }

      id = R.id.FloodCard;
      CardView FloodCard = ViewBindings.findChildViewById(rootView, id);
      if (FloodCard == null) {
        break missingId;
      }

      id = R.id.LandslideCard;
      CardView LandslideCard = ViewBindings.findChildViewById(rootView, id);
      if (LandslideCard == null) {
        break missingId;
      }

      id = R.id.Settings;
      TextView Settings = ViewBindings.findChildViewById(rootView, id);
      if (Settings == null) {
        break missingId;
      }

      id = R.id.changeLocationCardView;
      CardView changeLocationCardView = ViewBindings.findChildViewById(rootView, id);
      if (changeLocationCardView == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.constraintLayout3;
      ConstraintLayout constraintLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout3 == null) {
        break missingId;
      }

      id = R.id.currentDateTime;
      TextView currentDateTime = ViewBindings.findChildViewById(rootView, id);
      if (currentDateTime == null) {
        break missingId;
      }

      id = R.id.currentLocation;
      TextView currentLocation = ViewBindings.findChildViewById(rootView, id);
      if (currentLocation == null) {
        break missingId;
      }

      id = R.id.cycloneLabel;
      TextView cycloneLabel = ViewBindings.findChildViewById(rootView, id);
      if (cycloneLabel == null) {
        break missingId;
      }

      id = R.id.cycloneRiskLevel;
      TextView cycloneRiskLevel = ViewBindings.findChildViewById(rootView, id);
      if (cycloneRiskLevel == null) {
        break missingId;
      }

      id = R.id.cycloneRiskLevelPercentage;
      TextView cycloneRiskLevelPercentage = ViewBindings.findChildViewById(rootView, id);
      if (cycloneRiskLevelPercentage == null) {
        break missingId;
      }

      id = R.id.floodLabel;
      TextView floodLabel = ViewBindings.findChildViewById(rootView, id);
      if (floodLabel == null) {
        break missingId;
      }

      id = R.id.floodRiskLevel;
      TextView floodRiskLevel = ViewBindings.findChildViewById(rootView, id);
      if (floodRiskLevel == null) {
        break missingId;
      }

      id = R.id.floodRiskLevelPercentage;
      TextView floodRiskLevelPercentage = ViewBindings.findChildViewById(rootView, id);
      if (floodRiskLevelPercentage == null) {
        break missingId;
      }

      id = R.id.greetingsOfTheDay;
      TextView greetingsOfTheDay = ViewBindings.findChildViewById(rootView, id);
      if (greetingsOfTheDay == null) {
        break missingId;
      }

      id = R.id.home;
      TextView home = ViewBindings.findChildViewById(rootView, id);
      if (home == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.landslideRiskLabel;
      TextView landslideRiskLabel = ViewBindings.findChildViewById(rootView, id);
      if (landslideRiskLabel == null) {
        break missingId;
      }

      id = R.id.landslideRiskLevelPercentage;
      TextView landslideRiskLevelPercentage = ViewBindings.findChildViewById(rootView, id);
      if (landslideRiskLevelPercentage == null) {
        break missingId;
      }

      id = R.id.lanslideLabel;
      TextView lanslideLabel = ViewBindings.findChildViewById(rootView, id);
      if (lanslideLabel == null) {
        break missingId;
      }

      id = R.id.mapButton;
      TextView mapButton = ViewBindings.findChildViewById(rootView, id);
      if (mapButton == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      return new ActivityUserBinding((ConstraintLayout) rootView, CycloneCard, FloodCard,
          LandslideCard, Settings, changeLocationCardView, constraintLayout2, constraintLayout3,
          currentDateTime, currentLocation, cycloneLabel, cycloneRiskLevel,
          cycloneRiskLevelPercentage, floodLabel, floodRiskLevel, floodRiskLevelPercentage,
          greetingsOfTheDay, home, imageView3, landslideRiskLabel, landslideRiskLevelPercentage,
          lanslideLabel, mapButton, textView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
