// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserLocationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView address;

  @NonNull
  public final TextView city;

  @NonNull
  public final TextView country;

  @NonNull
  public final Button getLocationBtn;

  @NonNull
  public final TextView latitude;

  @NonNull
  public final TextView location;

  private ActivityUserLocationBinding(@NonNull ConstraintLayout rootView, @NonNull TextView address,
      @NonNull TextView city, @NonNull TextView country, @NonNull Button getLocationBtn,
      @NonNull TextView latitude, @NonNull TextView location) {
    this.rootView = rootView;
    this.address = address;
    this.city = city;
    this.country = country;
    this.getLocationBtn = getLocationBtn;
    this.latitude = latitude;
    this.location = location;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextView address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.city;
      TextView city = ViewBindings.findChildViewById(rootView, id);
      if (city == null) {
        break missingId;
      }

      id = R.id.country;
      TextView country = ViewBindings.findChildViewById(rootView, id);
      if (country == null) {
        break missingId;
      }

      id = R.id.get_location_btn;
      Button getLocationBtn = ViewBindings.findChildViewById(rootView, id);
      if (getLocationBtn == null) {
        break missingId;
      }

      id = R.id.latitude;
      TextView latitude = ViewBindings.findChildViewById(rootView, id);
      if (latitude == null) {
        break missingId;
      }

      id = R.id.location;
      TextView location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      return new ActivityUserLocationBinding((ConstraintLayout) rootView, address, city, country,
          getLocationBtn, latitude, location);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
